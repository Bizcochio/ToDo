@import url("https://fonts.googleapis.com/css2?family=Press+Start+2P&display=swap");

html,
body {
  min-height: 100vh;
  margin: 0;
  padding: 0;
  overflow-x: hidden; /* –£–±–∏—Ä–∞–µ–º –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω—ã–π —Å–∫—Ä–æ–ª–ª */
}

body {
  min-height: 100vh; /* –¢–µ–ø–µ—Ä—å —Ñ–æ–Ω —Ç—è–Ω–µ—Ç—Å—è –Ω–∞ –≤–µ—Å—å —ç–∫—Ä–∞–Ω */
  background: radial-gradient(
    circle at center,
    rgb(4, 4, 17) 8%,
    rgba(0, 0, 0, 1) 90%
  );
  background-size: cover;
  background-repeat: no-repeat;
  color: aliceblue;
  font-family: "Press Start 2P", cursive !important;
  text-align: center;
  transition: background 0.3s ease-in-out, color 0.3s ease-in-out;
  padding: 10px; /* –û—Å—Ç–∞–≤–ª—è–µ–º, –Ω–æ –æ–Ω –Ω–µ –±—É–¥–µ—Ç –ª–æ–º–∞—Ç—å —Ñ–æ–Ω */
}

body.light-theme {
  background: radial-gradient(
    circle at center,
    rgba(113, 121, 113, 0.26) 8%,
    rgb(162, 187, 201) 90%
  );
  color: aliceblue;
}

/* –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —Ç–µ–º—ã */

h1 {
  font-size: 60px;
  letter-spacing: 2px;
  color: #eceaeacb;
  text-shadow: -2px 0 rgba(100, 200, 200, 0.808), 5px 0 #0099ff;
  animation: subtleFlicker 1.5s infinite alternate ease-in-out;
  display: inline-block;
  max-width: 90%;
  white-space: pre-wrap; /* –ü–æ–∑–≤–æ–ª—è–µ—Ç –ø–µ—Ä–µ–Ω–æ—Å–∏—Ç—å —Å–ª–æ–≤–∞ */
  word-break: break-word;
  margin-bottom: 20px;
}

/* –õ—ë–≥–∫–æ–µ, –ø–æ—á—Ç–∏ –Ω–µ–∑–∞–º–µ—Ç–Ω–æ–µ –º–µ—Ä—Ü–∞–Ω–∏–µ –ª–æ–≥–æ*/
/* –õ—ë–≥–∫–æ–µ, –ø–æ—á—Ç–∏ –Ω–µ–∑–∞–º–µ—Ç–Ω–æ–µ –º–µ—Ä—Ü–∞–Ω–∏–µ –ª–æ–≥–æ*/
@keyframes subtleFlicker {
  0% {
    opacity: 1;
  }
  50% {
    opacity: 0.8;
  }
  100% {
    opacity: 1;
  }
}
/* üîπ –ü–æ–ª–µ –≤–≤–æ–¥–∞ */
#taskInput {
  width: 70%; /* –í–º–µ—Å—Ç–æ 10%, —á—Ç–æ–±—ã –Ω–µ –±—ã–ª–æ –º–∏–∫—Ä–æ—Å–∫–æ–ø–∏—á–µ—Å–∫–∏–º */
  max-width: 380px; /* –ù–∞ –±–æ–ª—å—à–∏—Ö —ç–∫—Ä–∞–Ω–∞—Ö –Ω–µ —Ä–∞—Å—Ç—è–≥–∏–≤–∞—Ç—å —Å–ª–∏—à–∫–æ–º —Å–∏–ª—å–Ω–æ */
  padding: clamp(8px, 2vw, 12px);
  font-size: clamp(10px, 3vw, 13px); /* –ê–¥–∞–ø—Ç–∏–≤–Ω—ã–π —Ç–µ–∫—Å—Ç */
  color: white;
  background: rgb(19, 19, 19);
  border: 2px solid #444; /* –ß—É—Ç—å —Ç–æ–Ω—å—à–µ, —á—Ç–æ–±—ã –≤—ã–≥–ª—è–¥–µ–ª–æ –∞–∫–∫—É—Ä–∞—Ç–Ω–µ–µ */
  border-radius: 10px;
  outline: none;
  caret-color: #0099ff;
  transition: caret-color 0.2s ease-in-out;
  font-family: "Press Start 2P", cursive;
}

@media (max-width: 768px) {
  #taskInput {
    width: 80%; /* –ù–∞ –º–æ–±–∏–ª–∫–µ —á—É—Ç—å —à–∏—Ä–µ */
    border-width: 2px; /* –¢–æ–Ω—å—à–µ –≥—Ä–∞–Ω–∏—Ü–∞ */
  }
}

#taskInput,
#addTask {
  display: block;
  margin: 0 auto 20px auto;
}

#taskInput {
  width: 350px;
  padding: 10px;
  font-size: 10px;
  color: white;
  background: rgb(19, 19, 19);
  border: 3px solid #444;
  border-radius: 10px;
  outline: none;
  caret-color: #0099ff;
  transition: caret-color 0.2s ease-in-out;
}

#taskInput:focus {
  border-color: #0099ff;
  box-shadow: 0 0 10px #0099ff;
}

#taskInput::placeholder {
  opacity: 1;
  transition: opacity 0.3s ease-in-out;
}

#taskInput:focus::placeholder {
  opacity: 0;
}

/* üîπ –ö–Ω–æ–ø–∫–∞ "–î–æ–±–∞–≤–∏—Ç—å" */
#addTask {
  width: auto;
  min-width: 100px;
  max-width: 90%;
  padding: clamp(8px, 2vw, 12px) clamp(15px, 4vw, 20px);
  font-size: clamp(10px, 3vw, 13px); /* –¢–µ–ø–µ—Ä—å —Ç–µ–∫—Å—Ç –∞–¥–∞–ø—Ç–∏–≤–Ω—ã–π */
  color: white;
  background-color: #0099ff;
  border: none;
  border-radius: 10px;
  cursor: pointer;
  transition: all 0.3s ease-in-out;
  font-family: "Press Start 2P", cursive;
  text-align: center;
}

@media (max-width: 768px) {
  #addTask {
    font-size: 10px; /* –ß—É—Ç—å –∫—Ä—É–ø–Ω–µ–µ –Ω–∞ –º–æ–±–∏–ª–∫–µ */
    padding: 10px 18px;
  }
}

#addTask:active {
  transform: scale(0.9);
  box-shadow: inset 0 0 10px rgba(0, 0, 0, 0.466);
  background-color: #0b5688;
  border: 1px solid #95abc5;
}

#addTask:hover {
  transform: scale(1.02);
}

/* üîπ –ê–Ω–∏–º–∞—Ü–∏—è –ø–æ—è–≤–ª–µ–Ω–∏—è */
@keyframes fadeInTask {
  0% {
    opacity: 0;
    transform: translateY(-10px);
  }
  100% {
    opacity: 1;
    transform: translateY(0);
  }
}

/* üîπ –°–ø–∏—Å–æ–∫ —Ç–∞—Å–∫–æ–≤ */
#taskList {
  list-style: none;
  padding: 14px;
  text-align: left;
  max-width: 450px;
  margin: 50px auto;
}

/* üîπ –¢–∞—Å–∫ */
.task {
  width: 90%;
  max-width: 350px;
  display: flex;
  align-items: center;
  justify-content: space-between;
  background: rgba(8, 1, 32, 0.925);
  color: white;
  font-size: 12px;
  padding: 12px;
  margin: 10px 0;
  border: 2px solid #0099ff;
  border-radius: 5px;
  position: relative;
  max-width: 500px;
  word-wrap: break-word;
  overflow-wrap: break-word;
  white-space: normal;
  padding-right: 40px;
  box-shadow: 0 0 4px #0099ff;
  animation: fadeInTask 0.3s ease-in-out;
  z-index: 2;
  box-shadow: 0 0 4px #0099ff;
  animation: fadeInTask 0.3s ease-in-out;
  z-index: 2;
}

/* üîπ –¢–µ–∫—Å—Ç —Ç–∞—Å–∫–∞ */
.taskText {
  font-size: 15px;
  flex-grow: 1;
  max-width: 80%;
  word-wrap: break-word;
  overflow-wrap: break-word;
  white-space: normal;
  padding-left: 0px;
}

/* üîπ –ö–Ω–æ–ø–∫–∞ "‚ãÆ" */
.menuButton {
  background: none;
  border: none;
  color: white;
  font-size: 25px;
  cursor: pointer;
  position: absolute;
  right: 10px;
  top: 50%;
  transform: translateY(-50%);
}

/* ============ –ú–µ–Ω—é –∑–∞–¥–∞—á–∏ ============ */
/* –ù–∞ —à–∏—Ä–æ–∫–æ–º —ç–∫—Ä–∞–Ω–µ ‚Äì –º–µ–Ω—é –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç—Å—è —Å–ø—Ä–∞–≤–∞ */
.taskMenu {
  position: absolute;
  top: 50%;
  left: calc(100% + 5px);
  transform: translateY(-50%) scale(0.8);
  background: rgba(27, 27, 37, 0.95);
  border-radius: 12px;
  padding: 5px;
  display: flex;
  flex-direction: column;
  gap: 4px;
  box-shadow: 0 0 15px #0099ff;
  z-index: 100;
  width: 160px;
  opacity: 0;
  pointer-events: none;
  transition: transform 0.2s ease-in-out, opacity 0.15s ease-in-out;
}

.taskMenu.visible {
  transform: translateY(-50%) scale(1);
  opacity: 1;
  pointer-events: auto;
}

.taskMenu button {
  color: white;
  background: rgb(0, 0, 0);
  padding: 12px;
  font-size: 12px;
  display: flex;
  align-items: center;
  gap: 10px;
  width: 100%;
  white-space: nowrap;
  border: none;
  border-radius: 8px;
  cursor: pointer;
  transition: background 0.2s ease-in-out, transform 0.1s ease-in-out;
}

.taskMenu button i {
  font-size: 14px;
  transition: transform 0.2s ease-in-out;
}

.taskMenu button:hover {
  background: rgba(0, 153, 255, 0.3);
}

.taskMenu button:active {
  transform: scale(0.95);
}
.deleteTask {
  color: #ff444483;
  font-family: "Press Start 2P", cursive;
}
.deleteTask:hover {
  background: rgba(255, 68, 68, 0.2);
  text-shadow: 0 0 15px #ff4444;
}
.editTask {
  color: #4df523;
  font-family: "Press Start 2P", cursive;
}
.editTask:hover {
  background: rgba(245, 166, 35, 0.2);
  text-shadow: 0 0 5px #f5a623;
}
.editInput {
  width: 100%;
  font-size: 14px;
  color: rgb(255, 255, 255);
  background: rgba(22, 22, 22, 0.884);
  border: 2px solid #0099ff;
  border-radius: 5px;
  padding: 5px;
  outline: none;
  resize: none;
  transition: border 0.2s ease-in-out, box-shadow 0.2s ease-in-out;
  font-family: "Press Start 2P", cursive;
}
body.light-theme .editInput {
  width: 100%;
  font-size: 14px;
  color: rgb(0, 0, 0);
  background: rgba(82, 92, 146, 0.363);
  border: 2px solid #00ff6a9a;
  border-radius: 5px;
  padding: 5px;
  outline: none;
  resize: none;
  transition: border 0.2s ease-in-out, box-shadow 0.2s ease-in-out;
}

@keyframes neonGlow {
  0% {
    box-shadow: 0px 0px 8px rgba(92, 92, 92, 0.6);
  }
  100% {
    box-shadow: 0px 0px 15px rgb(78, 78, 78);
  }
}

@keyframes neonGlow {
  0% {
    box-shadow: 0px 0px 8px rgba(92, 92, 92, 0.6);
  }
  100% {
    box-shadow: 0px 0px 15px rgb(78, 78, 78);
  }
}

.editInput:focus {
  border-color: #add4ad;
  box-shadow: 0 0 5px #c7c7c7;
}
@keyframes glitchFade {
  0% {
    opacity: 1;
    transform: translateX(0) scale(1);
  }
  100% {
    transform: translateX(-10px) scale(0.8);
    opacity: 0;
  }
}
.task.removing {
  animation: glitchFade 0.4s steps(4) forwards;
}
.completeTask {
  background: none;
  border: none;
  font-size: 30px;
  font-size: 30px;
  cursor: pointer;
  color: #888;
  margin-right: 15px;
  transition: transform 0.2s ease-in-out, color 0.2s ease-in-out;
}

.task.completed .completeTask {
  color: #4bf329;
  text-shadow: 0 0 5px #4bf329;
}
.completeTask:active {
  transform: scale(2);
  transform: scale(2);
}
.task.completed .taskText {
  color: #888;
  text-decoration: line-through;
  transition: color 0.3s ease-in-out, text-decoration 0.3s ease-in-out;
}
.task.completed {
  border-color: #888;
  box-shadow: 0 0 1px #818181b4;
  background-color: #161616;
  animation: neonGlow 1s infinite alternate ease-in-out;
}

/* –ö–Ω–æ–ø–∫–∞ –∫–æ—Ä–∑–∏–Ω—ã */
#trashToggle {
  margin: 20px;
  position: fixed;
  bottom: 20px;
  right: 20px;
  background: none;
  border: none;
  outline: none;
  cursor: pointer;
  color: #6e8ea8ee;
  font-size: 50px;
  text-shadow: 0 0 8px #484d7a;
  color: #6e8ea8ee;
  font-size: 50px;
  text-shadow: 0 0 8px #484d7a;
  padding: 0;
  z-index: 9999;
  pointer-events: auto;
}
#trashToggle:hover {
  scale: (1.1);
  color: #6dc3ebe0;
  text-shadow: 0 0 11px #6fa4e0;
  scale: (1.1);
  color: #6dc3ebe0;
  text-shadow: 0 0 11px #6fa4e0;
}
#trashContainer {
  position: fixed;
  bottom: 120px;
  right: 20px;
  width: 30vw; /* –î–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–π —Ä–∞–∑–º–µ—Ä */
  max-width: 420px; /* –ù–æ –Ω–µ –±–æ–ª—å—à–µ 420px */
  min-width: 280px; /* –ò –Ω–µ –º–µ–Ω—å—à–µ 280px */
  max-height: min(50vh, 400px);
  overflow-y: auto;
  background: rgba(15, 15, 15, 0.95);
  border: 1px solid #0099ff;
  border-radius: 5px;
  padding: 10px;
  z-index: 200;
}

@media (max-width: 768px) {
  #trashContainer {
    bottom: 120px;
    right: 10px;
    width: 90%; /* –ù–∞ –º–æ–±–∏–ª–∫–µ —à–∏—Ä–∏–Ω–∞ 90% */
    max-width: none; /* –£–±–∏—Ä–∞–µ–º –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –≤ 420px */
    min-width: auto;
  }
}

#trashTasksContainer {
  margin-bottom: 20px;
}
#emptyTrashMessage {
  text-align: center;
  font-size: 12px;
  margin: 5px 0;
  color: #999;
}
#trashButtonsContainer {
  display: flex;
  justify-content: space-between;
  gap: 10px;
}
#restoreAllBtn {
  flex: 1;
  padding: 5px 0;
  font-size: 10px;
  color: white;
  background-color: #075812;
  border-radius: 3px;
  cursor: pointer;
  font-family: "Press Start 2P", cursive;
}
#clearTrashBtn {
  flex: 1;
  padding: 5px 0;
  font-size: 10px;
  color: white;
  background-color: #5f1a15;
  border-radius: 3px;
  cursor: pointer;
  font-family: "Press Start 2P", cursive;
}
#restoreAllBtn:hover,
#clearTrashBtn:hover {
  transform: scale(0.9);
}
#restoreAllBtn:active,
#clearTrashBtn:active {
  border: 1px solid #ccc;
}
.task.inTrash {
  display: grid;
  grid-template-columns: minmax(0, 1fr) auto;
  column-gap: 10px;
  align-items: center;
  margin: 5px 0;
  padding: 5px;
  border: 1px solid #0099ff;
  border-radius: 5px;
  background: transparent;
}
.task.inTrash .taskText {
  font-size: 13px;
  margin: 0;
  line-height: 1.4;
  white-space: pre-wrap;
  word-wrap: break-word;
  overflow-wrap: break-word;
  word-break: break-all;
  text-align: left;
}
.task.inTrash .completeTask,
.task.inTrash .menuButton,
.task.inTrash .taskMenu,
.task.inTrash .deleteTask,
.task.inTrash .editTask {
  display: none !important;
}
.restoreTask {
  display: none !important;
  font-size: 10px;
  color: white;
  background-color: #0099ff;
  border: none;
  border-radius: 3px;
  cursor: pointer;
  height: 100%;
  min-height: 24px;
  max-height: 48px;
  display: flex;
  align-items: center;
  justify-content: center;
  font-family: "Press Start 2P", cursive;
}

.task.inTrash .restoreTask {
  display: flex !important;
}
.task.inTrash .restoreTask:hover {
  background-color: #007acc;
}

.task.removing {
  animation: glitchFade 0.2s steps(4) forwards;
}

/* =====================
   4. –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∏ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —è–∑—ã–∫–∞
   ===================== */

/* –ö–Ω–æ–ø–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫ */
#settingsMenuButton {
  position: fixed;
  top: 1vh; /* –û–¥–∏–Ω–∞–∫–æ–≤—ã–π –æ—Ç—Å—Ç—É–ø —Å–≤–µ—Ä—Ö—É */
  width: 50px; /* –î–µ–ª–∞–µ–º —Ä–∞–∑–º–µ—Ä –æ–¥–∏–Ω–∞–∫–æ–≤—ã–º */
  left: 2vw; /* –í–º–µ—Å—Ç–æ —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–∏–∫—Å–µ–ª–µ–π */
  background: none;
  border: none;
  font-size: clamp(30px, 4vw, 55px); /* –ê–¥–∞–ø—Ç–∏–≤–Ω—ã–π —Ä–∞–∑–º–µ—Ä */
  color: white; /* –í–º–µ—Å—Ç–æ `none`, –ø–æ—Ç–æ–º—É —á—Ç–æ `none` –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç */
  cursor: pointer;
  z-index: 10; /* –û–¥–∏–Ω —Ä–∞–∑, –±–µ–∑ –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏—è */
  padding: 5px;
  transition: left 0.3s ease, transform 0.1s ease, opacity 0.2s ease;
}
.hidden {
  opacity: 0;
  pointer-events: none;
  transition: opacity 0.3s ease-in-out;
}

@media (max-width: 768px) {
  #settingsMenuButton {
    top: 1vh; /* –û–¥–∏–Ω–∞–∫–æ–≤—ã–π –æ—Ç—Å—Ç—É–ø —Å–≤–µ—Ä—Ö—É */
    width: 50px; /* –î–µ–ª–∞–µ–º —Ä–∞–∑–º–µ—Ä –æ–¥–∏–Ω–∞–∫–æ–≤—ã–º */
    left: 3vw; /* –û—Ç–æ–¥–≤–∏–Ω—É—Ç—å –Ω–µ–º–Ω–æ–≥–æ, –µ—Å–ª–∏ —Å–ª–∏—à–∫–æ–º –ø—Ä–∏–∂–∞—Ç–æ */
    font-size: 40px;
  }
}

#settingsMenuButton:hover {
  transform: scale(1.1);
}

#settingsMenuButton:active {
  transform: scale(0.9);
}

#settingsMenuButton.moved {
  left: 405px;
}

/* –®—Ç–æ—Ä–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫ */
#settingsDrawer {
  position: fixed;
  top: 0;
  left: calc(-100% - 5px); /* –ì–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ —Å–∫—Ä—ã–≤–∞–µ—Ç */
  width: clamp(280px, 80vw, 400px); /* –ê–¥–∞–ø—Ç–∏–≤–Ω–∞—è —à–∏—Ä–∏–Ω–∞ */
  height: 100%;
  box-sizing: border-box;
  background: rgba(15, 15, 15, 0.85);
  box-shadow: 2px 0 5px rgba(38, 112, 182, 0.767);
  transition: left 0.3s ease;
  z-index: 1000; /* –°–¥–µ–ª–∞–ª –≤—ã—à–µ, —á—Ç–æ–±—ã –º–µ–Ω—é –Ω–µ —É—Ö–æ–¥–∏–ª–æ –ø–æ–¥ –¥—Ä—É–≥–∏–µ —ç–ª–µ–º–µ–Ω—Ç—ã */
  padding: 20px;
}

@media (max-width: 768px) {
  #settingsDrawer {
    width: 68vw; /* –ù–∞ –º–æ–±–∏–ª—å–Ω—ã—Ö –ø–æ—á—Ç–∏ –Ω–∞ –≤–µ—Å—å —ç–∫—Ä–∞–Ω */
  }
}

#settingsDrawer.open {
  left: 0;
}
#settingsDrawer .settingsContent h2 {
  color: #0099ff;
  margin-bottom: 20px;
}

/* –ü—É–Ω–∫—Ç –º–µ–Ω—é (–Ω–∞—Å—Ç—Ä–æ–π–∫–∏) */
.settingsItem {
  display: flex;
  align-items: center;
  justify-content: space-between;
  cursor: pointer;
  margin-bottom: 10px;
  padding: 8px;
  background-color: rgba(0, 0, 0, 0.2);
  border-radius: 8px;
  border-radius: 8px;
  transition: background 0.2s;
}
.settingsItem:hover {
  background-color: rgba(30, 112, 160, 0.699);
}
span img {
  width: 30px;
  height: 30px;
  margin-right: 5px;
}

/* –ü–æ–¥–º–µ–Ω—é —Å —Ñ–ª–∞–≥–∞–º–∏ */
.languageSubmenu {
  display: none;
  margin-bottom: 15px;
}
.languageSubmenu.open {
  display: block;
}
.languageOption {
  display: flex;
  align-items: center;
  margin: 5px 0;
  cursor: pointer;
  padding: 5px;
  border-radius: 5px;
  transition: background 0.2s;
}
.languageOption:hover {
  background-color: rgba(30, 112, 160, 0.699);
}
.flagIcon {
  width: 30px;
  height: 20px;
  border-radius: 3px;
  margin-right: 10px;
}

/* –ö–Ω–æ–ø–∫–∞ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è —Ç–µ–º—ã */
#themeToggle {
  position: fixed;
  top: 2vh; /* –û–¥–∏–Ω–∞–∫–æ–≤—ã–π –æ—Ç—Å—Ç—É–ø —Å–≤–µ—Ä—Ö—É */
  width: 4px; /* –î–µ–ª–∞–µ–º —Ä–∞–∑–º–µ—Ä –æ–¥–∏–Ω–∞–∫–æ–≤—ã–º */
  background: none;
  border: none;
  cursor: pointer;
  z-index: 1000;
  transition: transform 0.3s ease;
  display: flex;
  align-items: center;
  justify-content: center;
}

@media (max-width: 768px) {
  #themeToggle {
    top: 2px;
    left: 82vw;
  }
}

#themeIcon {
  width: clamp(40px, 8vw, 60px);
  height: auto;
  transition: transform 0.5s ease-in-out, opacity 0.2s ease-in-out;
}

/* –ö—Ä—É—Ç—è—â–∞—è—Å—è –∫–Ω–æ–ø–∫–∞ */
.rotating {
  animation: spin 0.5s linear;
}

@keyframes spin {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(180deg);
  }
}

body.light-theme {
  /* –í–º–µ—Å—Ç–æ —á–∏—Å—Ç–æ –±–µ–ª–æ–≥–æ - –æ—á–µ–Ω—å —Å–≤–µ—Ç–ª—ã–π –ø–∞—Å—Ç–µ–ª—å–Ω—ã–π —Ü–≤–µ—Ç,
     —á—Ç–æ–±—ã –Ω–µ –±—ã–ª–æ —Å–ª–∏—à–∫–æ–º —Ä–µ–∑–∫–æ–≥–æ –∫–æ–Ω—Ç—Ä–∞—Å—Ç–∞ */
  background-color: #e6f2ff;
  color: #222; /* –¢—ë–º–Ω–æ-—Å–µ—Ä—ã–π, –Ω–µ —á—ë—Ä–Ω—ã–π */
  transition: background-color 0.5s ease, color 0.5s ease;
}

/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */
body.light-theme h1 {
  color: #333;
  /* –î–µ–ª–∞–µ–º —Ç–µ–Ω—å –ø–æ—Å–∫—Ä–æ–º–Ω–µ–µ */
  text-shadow: -2px 0 rgba(3, 38, 112, 0.692), 4px 0 #050e8b6c;
}

/* –ò–Ω–ø—É—Ç */
body.light-theme #taskInput {
  background: #ffffff;
  color: #333;
  border: 3px solid #ccc;
}

/* –ö–Ω–æ–ø–∫–∞ "–î–æ–±–∞–≤–∏—Ç—å" */
body.light-theme #addTask {
  background-color: #66ccff; /* –ß—É—Ç—å –ø–æ—Å–≤–µ—Ç–ª–µ–µ –≥–æ–ª—É–±–æ–π */
  color: #000;
  border: #000;
}

/* –¢–∞—Å–∫–∏ (—Ñ–æ–Ω –∏ –±–æ—Ä–¥–µ—Ä) */
body.light-theme .task {
  background: #ffffff;
  color: #333;
  border: 2px solid #0368ac; /* –ì–æ–ª—É–±–æ–≤–∞—Ç—ã–π –±–æ—Ä–¥–µ—Ä */
  box-shadow: 0 0 4px #0099ff;
}
body.light-theme .task.completed .taskText {
  color: #888;
  text-decoration: line-through;
  transition: color 0.3s ease-in-out, text-decoration 0.3s ease-in-out;
}
body.light-theme .task.completed {
  border-color: #6d6d6d7e;
  background-color: #6363631f;
}

/* –ö–æ—Ä–∑–∏–Ω–∞ */
body.light-theme #trashContainer {
  background: rgba(156, 156, 156, 0.288);
  border: 2px solid #0368ac;
}

/* –¢–µ–∫—Å—Ç "–ö–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞" */
body.light-theme #emptyTrashMessage {
  color: #575757;
}

/* –ö–Ω–æ–ø–∫–∏ –≤ –∫–æ—Ä–∑–∏–Ω–µ */
body.light-theme #restoreAllBtn {
  background-color: #6ba183;
  color: #000;
  border: none;
}
body.light-theme #clearTrashBtn {
  background-color: #c08383;
  color: #000;
  border: none;
}
body.light-theme #restoreAllBtn:hover,
body.light-theme #clearTrashBtn:hover {
  transform: scale(0.9);
}
body.light-theme #restoreAllBtn:active,
body.light-theme #clearTrashBtn:active {
  border: 1px solid #303030;
}

/* –ö–Ω–æ–ø–∫–∞ –∫–æ—Ä–∑–∏–Ω—ã –≤ —Å–≤–µ—Ç–ª–æ–π —Ç–µ–º–µ, –µ—Å–ª–∏ –Ω—É–∂–Ω–æ –æ—Å–≤–µ—Ç–ª–∏—Ç—å */
body.light-theme #trashToggle {
  color: #cc4444;
}

/* –ö–Ω–æ–ø–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫ */
body.light-theme #settingsMenuButton {
  color: #222;
}

/* –®—Ç–æ—Ä–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫ */
body.light-theme #settingsDrawer {
  background: rgba(129, 129, 133, 0.356);
  box-shadow: 2px 0 5px rgba(15, 68, 214, 0.904);
  z-index: 2;
}

/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ –≤–Ω—É—Ç—Ä–∏ —à—Ç–æ—Ä–∫–∏ */
body.light-theme #settingsDrawer .settingsContent h2 {
  color: #007acc;
}

/* –ü—É–Ω–∫—Ç—ã –º–µ–Ω—é –Ω–∞—Å—Ç—Ä–æ–µ–∫ */
body.light-theme .settingsItem {
  background-color: rgb(255, 255, 255);
  border: 1px solid #000;
}
body.light-theme .settingsItem:hover {
  background-color: rgba(101, 166, 226, 0.582);
}
/* –î–ª—è —Å–≤–µ—Ç–ª–æ–π —Ç–µ–º—ã (.light-theme) ‚Äì –æ–±—â–∏–π —Ñ–æ–Ω –º–µ–Ω—é */
/* –ú–∏–Ω–∏-–º–µ–Ω—é —Ç–∞—Å–∫–∞ */

body.light-theme .taskMenu {
  background: #8e8e8f7e;
  box-shadow: 0 0 1px #2833965d;
  border: 1px solid #0368ac;
  z-index: 2;
}

/* –ö–Ω–æ–ø–∫–∏ –≤–Ω—É—Ç—Ä–∏ –º–µ–Ω—é */
body.light-theme .taskMenu button {
  color: #000;
  background-color: #ffffff; /* –ß—ë—Ä–Ω—ã–π —Ñ–æ–Ω –∫–Ω–æ–ø–æ–∫ */
  color: #000000; /* –ë–µ–ª—ã–π —Ç–µ–∫—Å—Ç */
  border: 1px solid #0368ac;
  border: 1px solid #0368ac; /* –°–µ—Ä–µ–Ω—å–∫–∞—è –æ–±–≤–æ–¥–∫–∞ */
  border-radius: 8px;
  padding: 8px 8px;
  margin: 1px 0; /* –†–∞—Å—Å—Ç–æ—è–Ω–∏–µ –º–µ–∂–¥—É –∫–Ω–æ–ø–∫–∞–º–∏ */
  font-family: "Press Start 2P", cursive; /* –ò–ª–∏ —á—Ç–æ —É —Ç–µ–±—è —Ç–∞–º */
  cursor: pointer;
  transition: background-color 0.2s ease;
}

/* –•–æ–≤–µ—Ä-—ç—Ñ—Ñ–µ–∫—Ç (–ø–æ –∂–µ–ª–∞–Ω–∏—é) */
body.light-theme .taskMenu button:hover {
  background-color: #5bb6eb80; /* –¢–µ–º–Ω–æ-—Å–µ—Ä—ã–π –ø—Ä–∏ –Ω–∞–≤–µ–¥–µ–Ω–∏–∏ */
}
body.light-theme .menuButton {
  background: none;
  border: none;
  color: rgb(0, 0, 0);
  font-size: 25px;
  cursor: pointer;
  margin-left: auto;
  position: absolute;
  right: 10px;
  top: 50%;
  transform: translateY(-50%);
}

@keyframes glitch {
  0% {
    transform: translate(0, 0);
    opacity: 1;
  }
  20% {
    transform: translate(-2px, 2px);
    opacity: 0.9;
  }
  40% {
    transform: translate(2px, -2px);
    opacity: 1;
  }
  60% {
    transform: translate(-2px, 2px);
    opacity: 0.95;
  }
  80% {
    transform: translate(2px, -2px);
    opacity: 1;
  }
  100% {
    transform: translate(0, 0);
    opacity: 1;
  }
}

h1:hover {
  animation: glitch 0.2s infinite;
}
.task:hover {
  transform: scale(1.05);
  transition: all 0.3s ease-in-out;
}
.task {
  border: 2px solid #0099ff;
  box-shadow: 0px 0px 8px rgba(0, 153, 255, 0.6);
  animation: neonGlow 1.5s infinite alternate ease-in-out;
}

@keyframes neonGlow {
  0% {
    box-shadow: 0px 0px 8px rgba(0, 153, 255, 0.6);
  }
  100% {
    box-shadow: 0px 0px 15px rgba(0, 153, 255, 1);
  }
}

.gear-icon:hover {
  animation: gearRotate 0.5s linear;
}

/* –ê–Ω–∏–º–∞—Ü–∏—è –º–µ—Ä—Ü–∞—é—â–∏—Ö –∑–≤—ë–∑–¥ */
@keyframes twinkle {
  0% {
    opacity: 0.3;
    transform: scale(1);
  }
  50% {
    opacity: 1;
    transform: scale(1.2);
  }
  100% {
    opacity: 0.3;
    transform: scale(1);
  }
}

.star {
  position: fixed;
  width: 3px;
  height: 3px;
  background-color: rgba(255, 255, 255, 0.9);
  box-shadow: 0 0 5px rgba(255, 255, 255, 0.8);
  animation: twinkle 2s infinite ease-in-out;
}

body.light-theme .star {
  position: fixed;
  width: 3px;
  height: 3px;
  background-color: rgba(51, 74, 139, 0.9);
  box-shadow: 0 0 5px rgba(35, 81, 179, 0.411);
  animation: twinkle 2s infinite ease-in-out;
}
/* –ü–ª–∞–≤–Ω—ã–π –ø–µ—Ä–µ—Ö–æ–¥ —Ñ–æ–Ω–∞ –∏ —Ü–≤–µ—Ç–∞ */
body {
  transition: background 0.3s ease-in-out, color 0.3s ease-in-out;
  position: relative;
}

/* –ü–ª–∞–≤–Ω—ã–π –ø–µ—Ä–µ—Ö–æ–¥ –ø—Ä–∏ —Å–º–µ–Ω–µ —Ç–µ–º—ã */
.theme-transition {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: inherit;
  z-index: 9999;
  pointer-events: none;
  opacity: 1;
  transition: opacity 1s ease-in-out;
}

.theme-transition.hidden {
  opacity: 0;
}

/* –°—Ç–∏–ª–∏ –∫–Ω–æ–ø–∫–∏ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è —Ç–µ–º—ã */
#themeToggle {
  position: fixed;
  top: 20px;
  right: 45px;
  background: none;
  border: none;
  cursor: pointer;
  z-index: 1000;
  transition: transform 0.3s ease;
}
#themeIcon {
  width: 50px;
  height: 50px;
  transition: transform 0.5s ease-in-out;
}
.rotating {
  animation: spin 0.5s linear;
}
@keyframes spin {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(180deg);
  }
}

/* –ü—Ä–∏–º–µ—Ä —Å—Ç–∏–ª–µ–π –¥–ª—è —Å–≤–µ—Ç–ª–æ–π —Ç–µ–º—ã */
body.light-theme {
  background-color: #e6f2ff;
  color: #222;
}
