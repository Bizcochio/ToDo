document.addEventListener("DOMContentLoaded", () => {
  const input = document.getElementById("taskInput");
  const button = document.getElementById("addTask");
  const taskList = document.getElementById("taskList");

  function addTask() {
    const taskText = input.value.trim();
    if (taskText === "") return;

    const li = document.createElement("li");
    li.classList.add("task", "fadeIn");

    li.innerHTML = `
      <button class="completeTask">‚úî</button>
      <span class="taskText">${taskText.replace(/\n/g, "<br>")}</span>
      <button class="menuButton"><i class="fas fa-ellipsis-h"></i></button>
      <div class="taskMenu">
          <button class="editTask">‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å</button>
          <button class="deleteTask">üóëÔ∏è –£–¥–∞–ª–∏—Ç—å</button>
      </div>
    `;

    taskList.appendChild(li);
    input.value = "";

    // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –º–µ–Ω—é –¥–ª—è –Ω–æ–≤–æ–≥–æ —Ç–∞—Å–∫–∞
    setupMenu(li);

    // –ö–Ω–æ–ø–∫–∞ "–í—ã–ø–æ–ª–Ω–µ–Ω–æ"
    li.querySelector(".completeTask").addEventListener("click", function () {
      let task = this.closest(".task");
      task.classList.toggle("completed");
    });

    // –£–¥–∞–ª–µ–Ω–∏–µ —Ç–∞—Å–∫–∞
    li.querySelector(".deleteTask").addEventListener("click", function (e) {
      e.stopPropagation();
      li.classList.add("removing");
      setTimeout(() => li.remove(), 500);
    });

    // –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–∞—Å–∫–∞
    li.querySelector(".editTask").addEventListener("click", function (e) {
      e.stopPropagation();
      editTask(li);
    });
  }

  button.addEventListener("click", addTask);

  input.addEventListener("keydown", (event) => {
    if (event.key === "Enter" && !event.shiftKey) {
      event.preventDefault();
      addTask();
    }
    if (event.key === "Tab" && event.shiftKey) {
      event.preventDefault();
      const start = input.selectionStart;
      input.value =
        input.value.substring(0, start) + "\n" + input.value.substring(start);
      input.selectionStart = input.selectionEnd = start + 1;
    }
  });

  function editTask(li) {
    const taskSpan = li.querySelector(".taskText");
    const oldText = taskSpan.innerHTML.replace(/<br>/g, "\n");

    const input = document.createElement("textarea");
    input.value = oldText;
    input.classList.add("editInput");

    taskSpan.replaceWith(input);
    input.focus();

    input.addEventListener("blur", saveEdit);
    input.addEventListener("keydown", (event) => {
      if (event.key === "Enter" && !event.shiftKey) {
        event.preventDefault();
        saveEdit();
      }
    });

    function saveEdit() {
      const newText = input.value.trim();
      if (newText === "") {
        input.value = oldText;
      }
      const newSpan = document.createElement("span");
      newSpan.classList.add("taskText");
      newSpan.innerHTML = input.value.replace(/\n/g, "<br>");
      input.replaceWith(newSpan);
    }
  }

  function setupMenu(taskElement) {
    const button = taskElement.querySelector(".menuButton");
    const menu = taskElement.querySelector(".taskMenu");

    button.addEventListener("click", (event) => {
      event.stopPropagation();

      // –ó–∞–∫—Ä—ã–≤–∞–µ–º –≤—Å–µ –¥—Ä—É–≥–∏–µ –æ—Ç–∫—Ä—ã—Ç—ã–µ –º–µ–Ω—é
      document.querySelectorAll(".taskMenu.visible").forEach((openMenu) => {
        if (openMenu !== menu) {
          openMenu.classList.remove("visible");
        }
      });

      // –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º —Ç–µ–∫—É—â–µ–µ –º–µ–Ω—é
      menu.classList.toggle("visible");
    });
  }

  // –ó–∞–∫—Ä—ã–≤–∞–µ–º –º–µ–Ω—é –ø—Ä–∏ –∫–ª–∏–∫–µ –≤–Ω–µ –Ω–µ–≥–æ
  document.addEventListener("click", (event) => {
    document.querySelectorAll(".taskMenu.visible").forEach((menu) => {
      if (!menu.contains(event.target)) {
        menu.classList.remove("visible");
      }
    });
  });
  document.addEventListener("DOMContentLoaded", () => {
    function setupMenu(taskElement) {
      const button = taskElement.querySelector(".menuButton");
      const menu = taskElement.querySelector(".taskMenu");

      function showMenu() {
        // –ó–∞–∫—Ä—ã–≤–∞–µ–º –≤—Å–µ –¥—Ä—É–≥–∏–µ –æ—Ç–∫—Ä—ã—Ç—ã–µ –º–µ–Ω—é
        document.querySelectorAll(".taskMenu.visible").forEach((openMenu) => {
          if (openMenu !== menu) {
            openMenu.classList.remove("visible");
          }
        });

        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–µ–∫—É—â–µ–µ –º–µ–Ω—é
        menu.classList.add("visible");
      }

      function hideMenu() {
        setTimeout(() => {
          if (!menu.matches(":hover") && !button.matches(":hover")) {
            menu.classList.remove("visible");
          }
        }, 200); // –ó–∞–¥–µ—Ä–∂–∫–∞ –¥–ª—è –ø–ª–∞–≤–Ω–æ—Å—Ç–∏
      }

      button.addEventListener("mouseenter", showMenu);
      button.addEventListener("mouseleave", hideMenu);
      menu.addEventListener("mouseenter", showMenu);
      menu.addEventListener("mouseleave", hideMenu);
    }

    // –ü—Ä–∏–º–µ–Ω—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫—É –º–µ–Ω—é –∫–æ –≤—Å–µ–º —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–º –∑–∞–¥–∞—á–∞–º
    document.querySelectorAll(".task").forEach(setupMenu);
  });
});

document.addEventListener("DOMContentLoaded", () => {
  const taskList = document.getElementById("taskList");

  // –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫—É-—Ç–æ–≥–≥–ª –∫–æ—Ä–∑–∏–Ω—ã –≤ –≤–∏–¥–µ –∏–∫–æ–Ω–∫–∏
  const trashToggle = document.createElement("button");
  trashToggle.id = "trashToggle";
  trashToggle.innerHTML = '<i class="fas fa-trash"></i>';
  document.body.appendChild(trashToggle);

  // –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è –∫–æ—Ä–∑–∏–Ω—ã
  const trashContainer = document.createElement("div");
  trashContainer.id = "trashContainer";
  trashContainer.style.display = "none";
  document.body.appendChild(trashContainer);

  // –í –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ –∫–æ—Ä–∑–∏–Ω—ã —Å–æ–∑–¥–∞–µ–º –±–ª–æ–∫ –¥–ª—è —Ç–∞—Å–∫–æ–≤
  const trashTasksContainer = document.createElement("div");
  trashTasksContainer.id = "trashTasksContainer";
  trashContainer.appendChild(trashTasksContainer);

  // –°–æ–æ–±—â–µ–Ω–∏–µ "–ö–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞"
  const emptyMsg = document.createElement("p");
  emptyMsg.id = "emptyTrashMessage";
  emptyMsg.textContent = "–ö–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞";
  trashTasksContainer.appendChild(emptyMsg);

  // –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è –∫–Ω–æ–ø–æ–∫ –≤–Ω–∏–∑—É –∫–æ—Ä–∑–∏–Ω—ã
  const trashButtonsContainer = document.createElement("div");
  trashButtonsContainer.id = "trashButtonsContainer";
  trashContainer.appendChild(trashButtonsContainer);

  // –ö–Ω–æ–ø–∫–∞ "–í–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤—Å—ë"
  const restoreAllBtn = document.createElement("button");
  restoreAllBtn.id = "restoreAllBtn";
  restoreAllBtn.textContent = "–í–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤—Å—ë";
  trashButtonsContainer.appendChild(restoreAllBtn);

  // –ö–Ω–æ–ø–∫–∞ "–û—á–∏—Å—Ç–∏—Ç—å –∫–æ—Ä–∑–∏–Ω—É"
  const clearTrashBtn = document.createElement("button");
  clearTrashBtn.id = "clearTrashBtn";
  clearTrashBtn.textContent = "–û—á–∏—Å—Ç–∏—Ç—å –∫–æ—Ä–∑–∏–Ω—É";
  trashButtonsContainer.appendChild(clearTrashBtn);

  // –¢–æ–≥–≥–ª –∫–æ—Ä–∑–∏–Ω—ã –ø–æ –∫–ª–∏–∫—É –ø–æ –∏–∫–æ–Ω–∫–µ
  trashToggle.addEventListener("click", (e) => {
    e.stopPropagation();
    trashContainer.style.display =
      trashContainer.style.display === "none" ? "block" : "none";
  });

  // –ó–∞–∫—Ä—ã—Ç–∏–µ –∫–æ—Ä–∑–∏–Ω—ã –ø—Ä–∏ –∫–ª–∏–∫–µ –≤–Ω–µ –µ—ë
  document.addEventListener("click", (e) => {
    if (
      trashContainer.style.display === "block" &&
      !trashContainer.contains(e.target) &&
      e.target !== trashToggle
    ) {
      trashContainer.style.display = "none";
    }
  });

  // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ UI –∫–æ—Ä–∑–∏–Ω—ã: –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ "–ö–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞", –µ—Å–ª–∏ –Ω–µ—Ç —Ç–∞—Å–∫–æ–≤
  function updateTrashUI() {
    const tasksInTrash = trashTasksContainer.querySelectorAll(".task.inTrash");
    emptyMsg.style.display = tasksInTrash.length === 0 ? "block" : "none";
  }

  // –ü–µ—Ä–µ–º–µ—â–µ–Ω–∏–µ —Ç–∞—Å–∫–∞ –≤ –∫–æ—Ä–∑–∏–Ω—É
  function moveToTrash(task) {
    task.classList.add("removing");
    setTimeout(() => {
      task.classList.remove("removing");
      task.classList.add("inTrash");
      trashTasksContainer.appendChild(task);
      updateTrashUI();
    }, 300);
  }

  // –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ —Ç–∞—Å–∫–∞ –∏–∑ –∫–æ—Ä–∑–∏–Ω—ã
  function restoreTask(task) {
    task.classList.remove("inTrash");
    taskList.appendChild(task);
    updateTrashUI();
  }

  // –û–±–µ—Å–ø–µ—á–∏–≤–∞–µ–º –Ω–∞–ª–∏—á–∏–µ –∫–Ω–æ–ø–∫–∏ "–í–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å" –≤ —Ç–∞—Å–∫–µ (–µ—Å–ª–∏ –µ–µ –Ω–µ—Ç, –¥–æ–±–∞–≤–ª—è–µ–º)
  function ensureRestoreButton(task) {
    let restoreBtn = task.querySelector(".restoreTask");
    if (!restoreBtn) {
      restoreBtn = document.createElement("button");
      restoreBtn.classList.add("restoreTask");
      restoreBtn.textContent = "–í–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å";
      task.appendChild(restoreBtn);
      restoreBtn.addEventListener("click", (e) => {
        e.stopPropagation();
        restoreTask(task);
      });
    }
  }

  // –ó–∞–º–µ–Ω—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ "–£–¥–∞–ª–∏—Ç—å": —Ç–µ–ø–µ—Ä—å —Ç–∞—Å–∫ –ø–µ—Ä–µ–º–µ—â–∞–µ—Ç—Å—è –≤ –∫–æ—Ä–∑–∏–Ω—É
  function replaceDeleteEvent(task) {
    const delBtn = task.querySelector(".deleteTask");
    if (!delBtn) return;
    const newDelBtn = delBtn.cloneNode(true);
    delBtn.parentNode.replaceChild(newDelBtn, delBtn);
    newDelBtn.addEventListener("click", (e) => {
      e.stopPropagation();
      ensureRestoreButton(task);
      moveToTrash(task);
    });
  }

  // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –≤—Å–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —Ç–∞—Å–∫–∏
  document.querySelectorAll("#taskList .task").forEach((task) => {
    replaceDeleteEvent(task);
  });

  // –°–ª–µ–¥–∏–º –∑–∞ –Ω–æ–≤—ã–º–∏ —Ç–∞—Å–∫–∞–º–∏ (–¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏ –¥–æ–±–∞–≤–ª—è–µ–º—ã–º–∏)
  const observer = new MutationObserver((mutations) => {
    for (const mutation of mutations) {
      if (mutation.type === "childList") {
        mutation.addedNodes.forEach((node) => {
          if (
            node.nodeType === Node.ELEMENT_NODE &&
            node.classList.contains("task")
          ) {
            replaceDeleteEvent(node);
          }
        });
      }
    }
  });
  observer.observe(taskList, { childList: true });

  // "–í–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤—Å—ë" ‚Äî –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –≤—Å–µ —Ç–∞—Å–∫–∏ –∏–∑ –∫–æ—Ä–∑–∏–Ω—ã –≤ —Å–ø–∏—Å–æ–∫
  restoreAllBtn.addEventListener("click", () => {
    const tasksInTrash = trashTasksContainer.querySelectorAll(".task.inTrash");
    tasksInTrash.forEach((task) => {
      restoreTask(task);
    });
  });

  // "–û—á–∏—Å—Ç–∏—Ç—å –∫–æ—Ä–∑–∏–Ω—É" ‚Äî —É–¥–∞–ª—è–µ—Ç –≤—Å–µ —Ç–∞—Å–∫–∏ –∏–∑ DOM
  clearTrashBtn.addEventListener("click", () => {
    const tasksInTrash = trashTasksContainer.querySelectorAll(".task.inTrash");
    tasksInTrash.forEach((task) => {
      task.remove();
    });
    updateTrashUI();
  });

  updateTrashUI();
});
